@using Microsoft.AspNetCore.Identity
@using H4SS.Data

@inject SignInManager<ApplicationUser> SignInManager

<div class="manage-nav-container">
    <div class="manage-nav-header">
        <i class="bi bi-gear-fill me-2"></i>
        <h5 class="manage-nav-title">Account Settings</h5>
    </div>
    <ul class="nav nav-pills flex-column manage-nav-menu">
        <li class="nav-item">
            <NavLink class="nav-link" href="Account/Manage" Match="NavLinkMatch.All">
                <i class="bi bi-person-circle me-2"></i>
                <span>Profile</span>
            </NavLink>
        </li>
        <li class="nav-item">
            <NavLink class="nav-link" href="Account/Manage/Email">
                <i class="bi bi-envelope me-2"></i>
                <span>Email</span>
            </NavLink>
        </li>
        <li class="nav-item">
            <NavLink class="nav-link" href="Account/Manage/ChangePassword">
                <i class="bi bi-key me-2"></i>
                <span>Password</span>
            </NavLink>
        </li>
        @if (hasExternalLogins)
        {
            <li class="nav-item">
                <NavLink class="nav-link" href="Account/Manage/ExternalLogins">
                    <i class="bi bi-box-arrow-in-right me-2"></i>
                    <span>External logins</span>
                </NavLink>
            </li>
        }
        <li class="nav-item">
            <NavLink class="nav-link" href="Account/Manage/TwoFactorAuthentication">
                <i class="bi bi-shield-lock me-2"></i>
                <span>Two-factor authentication</span>
            </NavLink>
        </li>
        <li class="nav-item">
            <NavLink class="nav-link" href="Account/Manage/PersonalData">
                <i class="bi bi-file-earmark-person me-2"></i>
                <span>Personal data</span>
            </NavLink>
        </li>
    </ul>
</div>

@code {
    private bool hasExternalLogins;

    protected override async Task OnInitializedAsync()
    {
        hasExternalLogins = (await SignInManager.GetExternalAuthenticationSchemesAsync()).Any();
    }
}
